define(['dart_sdk', 'packages/flutter/src/animation/curves.dart', 'packages/flutter/src/painting/basic_types.dart', 'packages/flutter/src/rendering/flex.dart', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter/src/painting/strut_style.dart', 'packages/flutter/src/painting/placeholder_span.dart', 'packages/flutter/src/rendering/layer.dart', 'packages/flutter/src/services/text_editing.dart', 'packages/flutter/src/painting/alignment.dart', 'packages/flutter/src/widgets/scroll_view.dart', 'packages/fading_edge_scrollview/src/fading_edge_scrollview.dart'], (function load__packages__marquee__marquee_dart(dart_sdk, packages__flutter__src__animation__curves$46dart, packages__flutter__src__painting__basic_types$46dart, packages__flutter__src__rendering__flex$46dart, packages__flutter__src__widgets__widget_span$46dart, packages__flutter__src__painting__strut_style$46dart, packages__flutter__src__painting__placeholder_span$46dart, packages__flutter__src__rendering__layer$46dart, packages__flutter__src__services__text_editing$46dart, packages__flutter__src__painting__alignment$46dart, packages__flutter__src__widgets__scroll_view$46dart, packages__fading_edge_scrollview__src__fading_edge_scrollview$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const _js_helper = dart_sdk._js_helper;
  const _internal = dart_sdk._internal;
  const async = dart_sdk.async;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const curves = packages__flutter__src__animation__curves$46dart.src__animation__curves;
  const basic_types = packages__flutter__src__painting__basic_types$46dart.src__painting__basic_types;
  const flex = packages__flutter__src__rendering__flex$46dart.src__rendering__flex;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const scroll_controller = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_controller;
  const binding = packages__flutter__src__widgets__widget_span$46dart.src__widgets__binding;
  const text$ = packages__flutter__src__widgets__widget_span$46dart.src__widgets__text;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const basic = packages__flutter__src__widgets__widget_span$46dart.src__widgets__basic;
  const scroll_physics = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_physics;
  const ticker_provider = packages__flutter__src__widgets__widget_span$46dart.src__widgets__ticker_provider;
  const text_style = packages__flutter__src__painting__strut_style$46dart.src__painting__text_style;
  const text_span = packages__flutter__src__painting__placeholder_span$46dart.src__painting__text_span;
  const box = packages__flutter__src__rendering__layer$46dart.src__rendering__box;
  const text_editing = packages__flutter__src__services__text_editing$46dart.src__services__text_editing;
  const alignment$ = packages__flutter__src__painting__alignment$46dart.src__painting__alignment;
  const scroll_view = packages__flutter__src__widgets__scroll_view$46dart.src__widgets__scroll_view;
  const fading_edge_scrollview = packages__fading_edge_scrollview__src__fading_edge_scrollview$46dart.src__fading_edge_scrollview;
  var marquee = Object.create(dart.library);
  var $_set = dartx._set;
  var $keys = dartx.keys;
  var $_get = dartx._get;
  var $isNaN = dartx.isNaN;
  var $isFinite = dartx.isFinite;
  var $abs = dartx.abs;
  var $toInt = dartx.toInt;
  var $last = dartx.last;
  var $isEven = dartx.isEven;
  dart._checkModuleNullSafetyMode(false);
  var T = {
    LinkedMapOfdouble$double: () => (T.LinkedMapOfdouble$double = dart.constFn(_js_helper.LinkedMap$(core.double, core.double)))(),
    FutureOfvoid: () => (T.FutureOfvoid = dart.constFn(async.Future$(dart.void)))(),
    DurationToFutureOfvoid: () => (T.DurationToFutureOfvoid = dart.constFn(dart.fnType(T.FutureOfvoid(), [core.Duration])))(),
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    _LocationL: () => (T._LocationL = dart.constFn(dart.legacy(widget_inspector._Location)))(),
    BuildContextAndintToWidget: () => (T.BuildContextAndintToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, core.int])))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const({
        __proto__: basic_types.Axis.prototype,
        [_name]: "Axis.horizontal",
        index: 0
      });
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: flex.CrossAxisAlignment.prototype,
        [_name$]: "CrossAxisAlignment.center",
        index: 2
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 0
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: curves._DecelerateCurve.prototype
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textSpan",
        [_Location_column]: 38,
        [_Location_line]: 670,
        [_Location_file]: null
      });
    },
    get C5() {
      return C[5] = dart.constList([C[6] || CT.C6], T._LocationL());
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[5] || CT.C5,
        [_Location_name]: null,
        [_Location_column]: 33,
        [_Location_line]: 670,
        [_Location_file]: "file:///E:/Software/flutter/.pub-cache/hosted/pub.dartlang.org/marquee-2.1.0/lib/marquee.dart"
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: flex.CrossAxisAlignment.prototype,
        [_name$]: "CrossAxisAlignment.start",
        index: 0
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: flex.CrossAxisAlignment.prototype,
        [_name$]: "CrossAxisAlignment.end",
        index: 1
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: flex.CrossAxisAlignment.prototype,
        [_name$]: "CrossAxisAlignment.stretch",
        index: 3
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: flex.CrossAxisAlignment.prototype,
        [_name$]: "CrossAxisAlignment.baseline",
        index: 4
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 27,
        [_Location_line]: 712,
        [_Location_file]: null
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 17,
        [_Location_line]: 713,
        [_Location_file]: null
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textScaleFactor",
        [_Location_column]: 38,
        [_Location_line]: 713,
        [_Location_file]: null
      });
    },
    get C12() {
      return C[12] = dart.constList([C[13] || CT.C13, C[14] || CT.C14, C[15] || CT.C15], T._LocationL());
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[12] || CT.C12,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 712,
        [_Location_file]: "file:///E:/Software/flutter/.pub-cache/hosted/pub.dartlang.org/marquee-2.1.0/lib/marquee.dart"
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 21,
        [_Location_line]: 717,
        [_Location_file]: null
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 43,
        [_Location_line]: 717,
        [_Location_file]: null
      });
    },
    get C17() {
      return C[17] = dart.constList([C[18] || CT.C18, C[19] || CT.C19], T._LocationL());
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[17] || CT.C17,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 717,
        [_Location_file]: "file:///E:/Software/flutter/.pub-cache/hosted/pub.dartlang.org/marquee-2.1.0/lib/marquee.dart"
      });
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "controller",
        [_Location_column]: 7,
        [_Location_line]: 707,
        [_Location_file]: null
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollDirection",
        [_Location_column]: 7,
        [_Location_line]: 708,
        [_Location_file]: null
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "physics",
        [_Location_column]: 7,
        [_Location_line]: 709,
        [_Location_file]: null
      });
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "itemBuilder",
        [_Location_column]: 7,
        [_Location_line]: 710,
        [_Location_file]: null
      });
    },
    get C21() {
      return C[21] = dart.constList([C[22] || CT.C22, C[23] || CT.C23, C[24] || CT.C24, C[25] || CT.C25], T._LocationL());
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[21] || CT.C21,
        [_Location_name]: null,
        [_Location_column]: 31,
        [_Location_line]: 706,
        [_Location_file]: "file:///E:/Software/flutter/.pub-cache/hosted/pub.dartlang.org/marquee-2.1.0/lib/marquee.dart"
      });
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 7,
        [_Location_line]: 727,
        [_Location_file]: null
      });
    },
    get C29() {
      return C[29] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 7,
        [_Location_line]: 728,
        [_Location_file]: null
      });
    },
    get C27() {
      return C[27] = dart.constList([C[28] || CT.C28, C[29] || CT.C29], T._LocationL());
    },
    get C26() {
      return C[26] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[27] || CT.C27,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 726,
        [_Location_file]: "file:///E:/Software/flutter/.pub-cache/hosted/pub.dartlang.org/marquee-2.1.0/lib/marquee.dart"
      });
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gradientFractionOnStart",
        [_Location_column]: 7,
        [_Location_line]: 734,
        [_Location_file]: null
      });
    },
    get C33() {
      return C[33] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gradientFractionOnEnd",
        [_Location_column]: 7,
        [_Location_line]: 736,
        [_Location_file]: null
      });
    },
    get C34() {
      return C[34] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 737,
        [_Location_file]: null
      });
    },
    get C31() {
      return C[31] = dart.constList([C[32] || CT.C32, C[33] || CT.C33, C[34] || CT.C34], T._LocationL());
    },
    get C30() {
      return C[30] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[31] || CT.C31,
        [_Location_name]: null,
        [_Location_column]: 33,
        [_Location_line]: 733,
        [_Location_file]: "file:///E:/Software/flutter/.pub-cache/hosted/pub.dartlang.org/marquee-2.1.0/lib/marquee.dart"
      });
    }
  }, false);
  var C = Array(35).fill(void 0);
  var I = [
    "file:///E:/Software/flutter/.pub-cache/hosted/pub.dartlang.org/marquee-2.1.0/lib/marquee.dart",
    "package:marquee/marquee.dart"
  ];
  var _values$ = dart.privateName(marquee, "_values");
  marquee._IntegralCurve = class _IntegralCurve extends curves.Curve {
    static new(original) {
      if (original == null) dart.nullFailed(I[0], 31, 32, "original");
      let integral = 0.0;
      let values = new (T.LinkedMapOfdouble$double()).new();
      for (let t = 0.0; t <= 1.0; t = t + dart.notNull(marquee._IntegralCurve.delta)) {
        integral = integral + dart.notNull(original.transform(t)) * dart.notNull(marquee._IntegralCurve.delta);
        values[$_set](t, integral);
      }
      values[$_set](1.0, integral);
      for (let t of values[$keys])
        values[$_set](t, dart.nullCheck(values[$_get](t)) / integral);
      return new marquee._IntegralCurve.__(original, integral, values);
    }
    transform(t) {
      if (t == null) dart.nullFailed(I[0], 49, 27, "t");
      if (dart.notNull(t) < 0) return 0.0;
      for (let key of this[_values$][$keys])
        if (dart.notNull(key) > dart.notNull(t)) return dart.nullCheck(this[_values$][$_get](key));
      return 1.0;
    }
  };
  (marquee._IntegralCurve.__ = function(original, integral, _values) {
    if (original == null) dart.nullFailed(I[0], 19, 25, "original");
    if (integral == null) dart.nullFailed(I[0], 19, 40, "integral");
    if (_values == null) dart.nullFailed(I[0], 19, 55, "_values");
    this.original = original;
    this.integral = integral;
    this[_values$] = _values;
    marquee._IntegralCurve.__proto__.new.call(this);
    ;
  }).prototype = marquee._IntegralCurve.prototype;
  dart.addTypeTests(marquee._IntegralCurve);
  dart.addTypeCaches(marquee._IntegralCurve);
  dart.setLibraryUri(marquee._IntegralCurve, I[1]);
  dart.setFieldSignature(marquee._IntegralCurve, () => ({
    __proto__: dart.getFields(marquee._IntegralCurve.__proto__),
    original: dart.finalFieldType(curves.Curve),
    integral: dart.finalFieldType(core.double),
    [_values$]: dart.finalFieldType(core.Map$(core.double, core.double))
  }));
  dart.defineLazy(marquee._IntegralCurve, {
    /*marquee._IntegralCurve.delta*/get delta() {
      return 0.01;
    },
    set delta(_) {}
  }, false);
  var text$0 = dart.privateName(marquee, "Marquee.text");
  var style$ = dart.privateName(marquee, "Marquee.style");
  var textScaleFactor$ = dart.privateName(marquee, "Marquee.textScaleFactor");
  var scrollAxis$ = dart.privateName(marquee, "Marquee.scrollAxis");
  var crossAxisAlignment$ = dart.privateName(marquee, "Marquee.crossAxisAlignment");
  var blankSpace$ = dart.privateName(marquee, "Marquee.blankSpace");
  var velocity$ = dart.privateName(marquee, "Marquee.velocity");
  var startAfter$ = dart.privateName(marquee, "Marquee.startAfter");
  var pauseAfterRound$ = dart.privateName(marquee, "Marquee.pauseAfterRound");
  var numberOfRounds$ = dart.privateName(marquee, "Marquee.numberOfRounds");
  var showFadingOnlyWhenScrolling$ = dart.privateName(marquee, "Marquee.showFadingOnlyWhenScrolling");
  var fadingEdgeStartFraction$ = dart.privateName(marquee, "Marquee.fadingEdgeStartFraction");
  var fadingEdgeEndFraction$ = dart.privateName(marquee, "Marquee.fadingEdgeEndFraction");
  var startPadding$ = dart.privateName(marquee, "Marquee.startPadding");
  var accelerationDuration$ = dart.privateName(marquee, "Marquee.accelerationDuration");
  var accelerationCurve$ = dart.privateName(marquee, "Marquee.accelerationCurve");
  var decelerationDuration$ = dart.privateName(marquee, "Marquee.decelerationDuration");
  var decelerationCurve$ = dart.privateName(marquee, "Marquee.decelerationCurve");
  var onDone$ = dart.privateName(marquee, "Marquee.onDone");
  var _name = dart.privateName(basic_types, "_name");
  var _name$ = dart.privateName(flex, "_name");
  var Duration__duration = dart.privateName(core, "Duration._duration");
  marquee.Marquee = class Marquee extends framework.StatefulWidget {
    get text() {
      return this[text$0];
    }
    set text(value) {
      super.text = value;
    }
    get style() {
      return this[style$];
    }
    set style(value) {
      super.style = value;
    }
    get textScaleFactor() {
      return this[textScaleFactor$];
    }
    set textScaleFactor(value) {
      super.textScaleFactor = value;
    }
    get scrollAxis() {
      return this[scrollAxis$];
    }
    set scrollAxis(value) {
      super.scrollAxis = value;
    }
    get crossAxisAlignment() {
      return this[crossAxisAlignment$];
    }
    set crossAxisAlignment(value) {
      super.crossAxisAlignment = value;
    }
    get blankSpace() {
      return this[blankSpace$];
    }
    set blankSpace(value) {
      super.blankSpace = value;
    }
    get velocity() {
      return this[velocity$];
    }
    set velocity(value) {
      super.velocity = value;
    }
    get startAfter() {
      return this[startAfter$];
    }
    set startAfter(value) {
      super.startAfter = value;
    }
    get pauseAfterRound() {
      return this[pauseAfterRound$];
    }
    set pauseAfterRound(value) {
      super.pauseAfterRound = value;
    }
    get numberOfRounds() {
      return this[numberOfRounds$];
    }
    set numberOfRounds(value) {
      super.numberOfRounds = value;
    }
    get showFadingOnlyWhenScrolling() {
      return this[showFadingOnlyWhenScrolling$];
    }
    set showFadingOnlyWhenScrolling(value) {
      super.showFadingOnlyWhenScrolling = value;
    }
    get fadingEdgeStartFraction() {
      return this[fadingEdgeStartFraction$];
    }
    set fadingEdgeStartFraction(value) {
      super.fadingEdgeStartFraction = value;
    }
    get fadingEdgeEndFraction() {
      return this[fadingEdgeEndFraction$];
    }
    set fadingEdgeEndFraction(value) {
      super.fadingEdgeEndFraction = value;
    }
    get startPadding() {
      return this[startPadding$];
    }
    set startPadding(value) {
      super.startPadding = value;
    }
    get accelerationDuration() {
      return this[accelerationDuration$];
    }
    set accelerationDuration(value) {
      super.accelerationDuration = value;
    }
    get accelerationCurve() {
      return this[accelerationCurve$];
    }
    set accelerationCurve(value) {
      super.accelerationCurve = value;
    }
    get decelerationDuration() {
      return this[decelerationDuration$];
    }
    set decelerationDuration(value) {
      super.decelerationDuration = value;
    }
    get decelerationCurve() {
      return this[decelerationCurve$];
    }
    set decelerationCurve(value) {
      super.decelerationCurve = value;
    }
    get onDone() {
      return this[onDone$];
    }
    set onDone(value) {
      super.onDone = value;
    }
    createState() {
      return new marquee._MarqueeState.new();
    }
  };
  (marquee.Marquee.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let text = opts && 'text' in opts ? opts.text : null;
    if (text == null) dart.nullFailed(I[0], 95, 19, "text");
    let style = opts && 'style' in opts ? opts.style : null;
    let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
    let scrollAxis = opts && 'scrollAxis' in opts ? opts.scrollAxis : C[0] || CT.C0;
    if (scrollAxis == null) dart.nullFailed(I[0], 98, 10, "scrollAxis");
    let crossAxisAlignment = opts && 'crossAxisAlignment' in opts ? opts.crossAxisAlignment : C[1] || CT.C1;
    if (crossAxisAlignment == null) dart.nullFailed(I[0], 99, 10, "crossAxisAlignment");
    let blankSpace = opts && 'blankSpace' in opts ? opts.blankSpace : 0;
    if (blankSpace == null) dart.nullFailed(I[0], 100, 10, "blankSpace");
    let velocity = opts && 'velocity' in opts ? opts.velocity : 50;
    if (velocity == null) dart.nullFailed(I[0], 101, 10, "velocity");
    let startAfter = opts && 'startAfter' in opts ? opts.startAfter : C[2] || CT.C2;
    if (startAfter == null) dart.nullFailed(I[0], 102, 10, "startAfter");
    let pauseAfterRound = opts && 'pauseAfterRound' in opts ? opts.pauseAfterRound : C[2] || CT.C2;
    if (pauseAfterRound == null) dart.nullFailed(I[0], 103, 10, "pauseAfterRound");
    let showFadingOnlyWhenScrolling = opts && 'showFadingOnlyWhenScrolling' in opts ? opts.showFadingOnlyWhenScrolling : true;
    if (showFadingOnlyWhenScrolling == null) dart.nullFailed(I[0], 104, 10, "showFadingOnlyWhenScrolling");
    let fadingEdgeStartFraction = opts && 'fadingEdgeStartFraction' in opts ? opts.fadingEdgeStartFraction : 0;
    if (fadingEdgeStartFraction == null) dart.nullFailed(I[0], 105, 10, "fadingEdgeStartFraction");
    let fadingEdgeEndFraction = opts && 'fadingEdgeEndFraction' in opts ? opts.fadingEdgeEndFraction : 0;
    if (fadingEdgeEndFraction == null) dart.nullFailed(I[0], 106, 10, "fadingEdgeEndFraction");
    let numberOfRounds = opts && 'numberOfRounds' in opts ? opts.numberOfRounds : null;
    let startPadding = opts && 'startPadding' in opts ? opts.startPadding : 0;
    if (startPadding == null) dart.nullFailed(I[0], 108, 10, "startPadding");
    let accelerationDuration = opts && 'accelerationDuration' in opts ? opts.accelerationDuration : C[2] || CT.C2;
    if (accelerationDuration == null) dart.nullFailed(I[0], 109, 10, "accelerationDuration");
    let accelerationCurve = opts && 'accelerationCurve' in opts ? opts.accelerationCurve : C[3] || CT.C3;
    if (accelerationCurve == null) dart.nullFailed(I[0], 110, 11, "accelerationCurve");
    let decelerationDuration = opts && 'decelerationDuration' in opts ? opts.decelerationDuration : C[2] || CT.C2;
    if (decelerationDuration == null) dart.nullFailed(I[0], 111, 10, "decelerationDuration");
    let decelerationCurve = opts && 'decelerationCurve' in opts ? opts.decelerationCurve : C[3] || CT.C3;
    if (decelerationCurve == null) dart.nullFailed(I[0], 112, 11, "decelerationCurve");
    let onDone = opts && 'onDone' in opts ? opts.onDone : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[text$0] = text;
    this[style$] = style;
    this[textScaleFactor$] = textScaleFactor;
    this[scrollAxis$] = scrollAxis;
    this[crossAxisAlignment$] = crossAxisAlignment;
    this[blankSpace$] = blankSpace;
    this[velocity$] = velocity;
    this[startAfter$] = startAfter;
    this[pauseAfterRound$] = pauseAfterRound;
    this[showFadingOnlyWhenScrolling$] = showFadingOnlyWhenScrolling;
    this[fadingEdgeStartFraction$] = fadingEdgeStartFraction;
    this[fadingEdgeEndFraction$] = fadingEdgeEndFraction;
    this[numberOfRounds$] = numberOfRounds;
    this[startPadding$] = startPadding;
    this[accelerationDuration$] = accelerationDuration;
    this[decelerationDuration$] = decelerationDuration;
    this[onDone$] = onDone;
    if (!!blankSpace[$isNaN]) dart.assertFailed(null, I[0], 114, 16, "!blankSpace.isNaN");
    if (!(dart.notNull(blankSpace) >= 0)) dart.assertFailed("The blankSpace needs to be positive or zero.", I[0], 115, 16, "blankSpace >= 0");
    if (!blankSpace[$isFinite]) dart.assertFailed(null, I[0], 116, 16, "blankSpace.isFinite");
    if (!!velocity[$isNaN]) dart.assertFailed(null, I[0], 117, 16, "!velocity.isNaN");
    if (!(velocity !== 0.0)) dart.assertFailed("The velocity cannot be zero.", I[0], 118, 16, "velocity != 0.0");
    if (!velocity[$isFinite]) dart.assertFailed(null, I[0], 119, 16, "velocity.isFinite");
    if (!dart.test(pauseAfterRound['>='](core.Duration.zero))) dart.assertFailed("The pauseAfterRound cannot be negative as time travel isn't " + "invented yet.", I[0], 121, 11, "pauseAfterRound >= Duration.zero");
    if (!(dart.notNull(fadingEdgeStartFraction) >= 0 && dart.notNull(fadingEdgeStartFraction) <= 1)) dart.assertFailed("The fadingEdgeGradientFractionOnStart value should be between 0 and " + "1, inclusive", I[0], 126, 11, "fadingEdgeStartFraction >= 0 && fadingEdgeStartFraction <= 1");
    if (!(dart.notNull(fadingEdgeEndFraction) >= 0 && dart.notNull(fadingEdgeEndFraction) <= 1)) dart.assertFailed("The fadingEdgeGradientFractionOnEnd value should be between 0 and " + "1, inclusive", I[0], 131, 11, "fadingEdgeEndFraction >= 0 && fadingEdgeEndFraction <= 1");
    if (!(numberOfRounds == null || dart.notNull(numberOfRounds) > 0)) dart.assertFailed(null, I[0], 135, 16, "numberOfRounds == null || numberOfRounds > 0");
    if (!dart.test(accelerationDuration['>='](core.Duration.zero))) dart.assertFailed("The accelerationDuration cannot be negative as time travel isn't " + "invented yet.", I[0], 137, 11, "accelerationDuration >= Duration.zero");
    if (!dart.test(decelerationDuration['>='](core.Duration.zero))) dart.assertFailed("The decelerationDuration must be positive or zero as time travel " + "isn't invented yet.", I[0], 142, 11, "decelerationDuration >= Duration.zero");
    this[accelerationCurve$] = marquee._IntegralCurve.new(accelerationCurve);
    this[decelerationCurve$] = marquee._IntegralCurve.new(decelerationCurve);
    marquee.Marquee.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = marquee.Marquee.prototype;
  dart.addTypeTests(marquee.Marquee);
  dart.addTypeCaches(marquee.Marquee);
  dart.setMethodSignature(marquee.Marquee, () => ({
    __proto__: dart.getMethods(marquee.Marquee.__proto__),
    createState: dart.fnType(framework.State$(framework.StatefulWidget), [])
  }));
  dart.setLibraryUri(marquee.Marquee, I[1]);
  dart.setFieldSignature(marquee.Marquee, () => ({
    __proto__: dart.getFields(marquee.Marquee.__proto__),
    text: dart.finalFieldType(core.String),
    style: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    textScaleFactor: dart.finalFieldType(dart.nullable(core.double)),
    scrollAxis: dart.finalFieldType(basic_types.Axis),
    crossAxisAlignment: dart.finalFieldType(flex.CrossAxisAlignment),
    blankSpace: dart.finalFieldType(core.double),
    velocity: dart.finalFieldType(core.double),
    startAfter: dart.finalFieldType(core.Duration),
    pauseAfterRound: dart.finalFieldType(core.Duration),
    numberOfRounds: dart.finalFieldType(dart.nullable(core.int)),
    showFadingOnlyWhenScrolling: dart.finalFieldType(core.bool),
    fadingEdgeStartFraction: dart.finalFieldType(core.double),
    fadingEdgeEndFraction: dart.finalFieldType(core.double),
    startPadding: dart.finalFieldType(core.double),
    accelerationDuration: dart.finalFieldType(core.Duration),
    accelerationCurve: dart.finalFieldType(marquee._IntegralCurve),
    decelerationDuration: dart.finalFieldType(core.Duration),
    decelerationCurve: dart.finalFieldType(marquee._IntegralCurve),
    onDone: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [])))
  }));
  var _controller = dart.privateName(marquee, "_controller");
  var ___MarqueeState__startPosition = dart.privateName(marquee, "_#_MarqueeState#_startPosition");
  var ___MarqueeState__startPosition_isSet = dart.privateName(marquee, "_#_MarqueeState#_startPosition#isSet");
  var ___MarqueeState__accelerationTarget = dart.privateName(marquee, "_#_MarqueeState#_accelerationTarget");
  var ___MarqueeState__accelerationTarget_isSet = dart.privateName(marquee, "_#_MarqueeState#_accelerationTarget#isSet");
  var ___MarqueeState__linearTarget = dart.privateName(marquee, "_#_MarqueeState#_linearTarget");
  var ___MarqueeState__linearTarget_isSet = dart.privateName(marquee, "_#_MarqueeState#_linearTarget#isSet");
  var ___MarqueeState__decelerationTarget = dart.privateName(marquee, "_#_MarqueeState#_decelerationTarget");
  var ___MarqueeState__decelerationTarget_isSet = dart.privateName(marquee, "_#_MarqueeState#_decelerationTarget#isSet");
  var ___MarqueeState__totalDuration = dart.privateName(marquee, "_#_MarqueeState#_totalDuration");
  var ___MarqueeState__totalDuration_isSet = dart.privateName(marquee, "_#_MarqueeState#_totalDuration#isSet");
  var _linearDuration = dart.privateName(marquee, "_linearDuration");
  var _running = dart.privateName(marquee, "_running");
  var _isOnPause = dart.privateName(marquee, "_isOnPause");
  var _roundCounter = dart.privateName(marquee, "_roundCounter");
  var _startPosition = dart.privateName(marquee, "_startPosition");
  var _accelerationTarget = dart.privateName(marquee, "_accelerationTarget");
  var _linearTarget = dart.privateName(marquee, "_linearTarget");
  var _decelerationTarget = dart.privateName(marquee, "_decelerationTarget");
  var _totalDuration = dart.privateName(marquee, "_totalDuration");
  var _accelerationDuration = dart.privateName(marquee, "_accelerationDuration");
  var _decelerationDuration = dart.privateName(marquee, "_decelerationDuration");
  var _scroll = dart.privateName(marquee, "_scroll");
  var _makeRoundTrip = dart.privateName(marquee, "_makeRoundTrip");
  var _getTextWidth = dart.privateName(marquee, "_getTextWidth");
  var _initialize = dart.privateName(marquee, "_initialize");
  var _accelerate = dart.privateName(marquee, "_accelerate");
  var _moveLinearly = dart.privateName(marquee, "_moveLinearly");
  var _decelerate = dart.privateName(marquee, "_decelerate");
  var _animateTo = dart.privateName(marquee, "_animateTo");
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  var _buildBlankSpace = dart.privateName(marquee, "_buildBlankSpace");
  var _wrapWithFadingEdgeScrollView = dart.privateName(marquee, "_wrapWithFadingEdgeScrollView");
  const State_SingleTickerProviderStateMixin$36 = class State_SingleTickerProviderStateMixin extends framework.State$(marquee.Marquee) {};
  (State_SingleTickerProviderStateMixin$36.new = function() {
    ticker_provider.SingleTickerProviderStateMixin$(marquee.Marquee)[dart.mixinNew].call(this);
    State_SingleTickerProviderStateMixin$36.__proto__.new.call(this);
  }).prototype = State_SingleTickerProviderStateMixin$36.prototype;
  dart.applyMixin(State_SingleTickerProviderStateMixin$36, ticker_provider.SingleTickerProviderStateMixin$(marquee.Marquee));
  marquee._MarqueeState = class _MarqueeState extends State_SingleTickerProviderStateMixin$36 {
    get [_startPosition]() {
      let t0;
      return dart.test(this[___MarqueeState__startPosition_isSet]) ? (t0 = this[___MarqueeState__startPosition], t0) : dart.throw(new _internal.LateError.fieldNI("_startPosition"));
    }
    set [_startPosition](t0) {
      if (t0 == null) dart.nullFailed(I[0], 500, 15, "null");
      this[___MarqueeState__startPosition_isSet] = true;
      this[___MarqueeState__startPosition] = t0;
    }
    get [_accelerationTarget]() {
      let t1;
      return dart.test(this[___MarqueeState__accelerationTarget_isSet]) ? (t1 = this[___MarqueeState__accelerationTarget], t1) : dart.throw(new _internal.LateError.fieldNI("_accelerationTarget"));
    }
    set [_accelerationTarget](t1) {
      if (t1 == null) dart.nullFailed(I[0], 502, 7, "null");
      this[___MarqueeState__accelerationTarget_isSet] = true;
      this[___MarqueeState__accelerationTarget] = t1;
    }
    get [_linearTarget]() {
      let t2;
      return dart.test(this[___MarqueeState__linearTarget_isSet]) ? (t2 = this[___MarqueeState__linearTarget], t2) : dart.throw(new _internal.LateError.fieldNI("_linearTarget"));
    }
    set [_linearTarget](t2) {
      if (t2 == null) dart.nullFailed(I[0], 503, 15, "null");
      this[___MarqueeState__linearTarget_isSet] = true;
      this[___MarqueeState__linearTarget] = t2;
    }
    get [_decelerationTarget]() {
      let t3;
      return dart.test(this[___MarqueeState__decelerationTarget_isSet]) ? (t3 = this[___MarqueeState__decelerationTarget], t3) : dart.throw(new _internal.LateError.fieldNI("_decelerationTarget"));
    }
    set [_decelerationTarget](t3) {
      if (t3 == null) dart.nullFailed(I[0], 504, 15, "null");
      this[___MarqueeState__decelerationTarget_isSet] = true;
      this[___MarqueeState__decelerationTarget] = t3;
    }
    get [_totalDuration]() {
      let t4;
      return dart.test(this[___MarqueeState__totalDuration_isSet]) ? (t4 = this[___MarqueeState__totalDuration], t4) : dart.throw(new _internal.LateError.fieldNI("_totalDuration"));
    }
    set [_totalDuration](t4) {
      if (t4 == null) dart.nullFailed(I[0], 507, 17, "null");
      this[___MarqueeState__totalDuration_isSet] = true;
      this[___MarqueeState__totalDuration] = t4;
    }
    get [_accelerationDuration]() {
      return this.widget.accelerationDuration;
    }
    get [_decelerationDuration]() {
      return this.widget.decelerationDuration;
    }
    get isDone() {
      return this.widget.numberOfRounds == null ? false : this.widget.numberOfRounds == this[_roundCounter];
    }
    get showFading() {
      return !dart.test(this.widget.showFadingOnlyWhenScrolling) ? true : !dart.test(this[_isOnPause]);
    }
    initState() {
      super.initState();
      dart.nullCheck(binding.WidgetsBinding.instance).addPostFrameCallback(dart.fn(_ => {
        if (_ == null) dart.nullFailed(I[0], 526, 52, "_");
        return async.async(dart.void, (function*() {
          if (!dart.test(this[_running])) {
            this[_running] = true;
            this[_controller].jumpTo(this[_startPosition]);
            yield T.FutureOfvoid().delayed(this.widget.startAfter);
            async.Future.doWhile(dart.bind(this, _scroll));
          }
        }).bind(this));
      }, T.DurationToFutureOfvoid()));
    }
    [_scroll]() {
      return async.async(core.bool, (function* _scroll() {
        yield this[_makeRoundTrip]();
        if (dart.test(this.isDone) && this.widget.onDone != null) {
          dart.nullCheck(this.widget.onDone)();
        }
        return dart.test(this[_running]) && !dart.test(this.isDone) && dart.test(this[_controller].hasClients);
      }).bind(this));
    }
    didUpdateWidget(oldWidget) {
      framework.Widget.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[0], 545, 31, "oldWidget");
      super.didUpdateWidget(marquee.Marquee.as(oldWidget));
    }
    dispose() {
      this[_running] = false;
      super.dispose();
    }
    [_initialize](context) {
      if (context == null) dart.nullFailed(I[0], 556, 33, "context");
      let totalLength = dart.notNull(this[_getTextWidth](context)) + dart.notNull(this.widget.blankSpace);
      let accelerationLength = dart.notNull(this.widget.accelerationCurve.integral) * dart.notNull(this.widget.velocity) * dart.notNull(this[_accelerationDuration].inMilliseconds) / 1000.0;
      let decelerationLength = dart.notNull(this.widget.decelerationCurve.integral) * dart.notNull(this.widget.velocity) * dart.notNull(this[_decelerationDuration].inMilliseconds) / 1000.0;
      let linearLength = (totalLength - accelerationLength[$abs]() - decelerationLength[$abs]()) * (dart.notNull(this.widget.velocity) > 0 ? 1 : -1);
      this[_startPosition] = 2 * totalLength - dart.notNull(this.widget.startPadding);
      this[_accelerationTarget] = dart.notNull(this[_startPosition]) + accelerationLength;
      this[_linearTarget] = dart.notNull(this[_accelerationTarget]) + linearLength;
      this[_decelerationTarget] = dart.notNull(this[_linearTarget]) + decelerationLength;
      this[_totalDuration] = this[_accelerationDuration]['+'](this[_decelerationDuration])['+'](new core.Duration.new({milliseconds: (linearLength / dart.notNull(this.widget.velocity) * 1000)[$toInt]()}));
      this[_linearDuration] = this[_totalDuration]['-'](this[_accelerationDuration])['-'](this[_decelerationDuration]);
      if (!dart.test(this[_totalDuration]['>'](core.Duration.zero))) dart.assertFailed("With the given values, the total duration for one round would be " + "negative. As time travel isn't invented yet, this shouldn't happen.", I[0], 585, 7, "_totalDuration > Duration.zero");
      if (!dart.test(dart.nullCheck(this[_linearDuration])['>='](core.Duration.zero))) dart.assertFailed("Acceleration and deceleration phase overlap. To fix this, try a " + "combination of these approaches:\n" + "* Make the text longer, so there's more room to animate within.\n" + "* Shorten the accelerationDuration or decelerationDuration.\n" + "* Decrease the velocity, so the duration to animate within is longer.\n", I[0], 590, 7, "_linearDuration! >= Duration.zero");
    }
    [_makeRoundTrip]() {
      return async.async(dart.void, (function* _makeRoundTrip() {
        if (!dart.test(this[_controller].hasClients)) return;
        this[_controller].jumpTo(this[_startPosition]);
        if (!dart.test(this[_running])) return;
        yield this[_accelerate]();
        if (!dart.test(this[_running])) return;
        yield this[_moveLinearly]();
        if (!dart.test(this[_running])) return;
        yield this[_decelerate]();
        this[_roundCounter] = dart.notNull(this[_roundCounter]) + 1;
        if (!dart.test(this[_running]) || !dart.test(this.mounted)) return;
        if (dart.test(this.widget.pauseAfterRound['>'](core.Duration.zero))) {
          this.setState(dart.fn(() => this[_isOnPause] = true, T.VoidTovoid()));
          yield async.Future.delayed(this.widget.pauseAfterRound);
          if (!dart.test(this.mounted) || dart.test(this.isDone)) return;
          this.setState(dart.fn(() => this[_isOnPause] = false, T.VoidTovoid()));
        }
      }).bind(this));
    }
    [_accelerate]() {
      return async.async(dart.void, (function* _accelerate() {
        yield this[_animateTo](this[_accelerationTarget], this[_accelerationDuration], this.widget.accelerationCurve);
      }).bind(this));
    }
    [_moveLinearly]() {
      return async.async(dart.void, (function* _moveLinearly() {
        yield this[_animateTo](this[_linearTarget], this[_linearDuration], curves.Curves.linear);
      }).bind(this));
    }
    [_decelerate]() {
      return async.async(dart.void, (function* _decelerate() {
        yield this[_animateTo](this[_decelerationTarget], this[_decelerationDuration], this.widget.decelerationCurve.flipped);
      }).bind(this));
    }
    [_animateTo](target, duration, curve) {
      if (curve == null) dart.nullFailed(I[0], 654, 11, "curve");
      return async.async(dart.void, (function* _animateTo() {
        if (!dart.test(this[_controller].hasClients)) return;
        if (dart.test(dart.nullCheck(duration)['>'](core.Duration.zero))) {
          yield this[_controller].animateTo(dart.nullCheck(target), {duration: duration, curve: curve});
        } else {
          this[_controller].jumpTo(dart.nullCheck(target));
        }
      }).bind(this));
    }
    [_getTextWidth](context) {
      if (context == null) dart.nullFailed(I[0], 665, 37, "context");
      let span = new text_span.TextSpan.new({text: this.widget.text, style: this.widget.style});
      let constraints = new box.BoxConstraints.new({maxWidth: 1 / 0});
      let richTextWidget = basic.RichText.as(new text$.Text.rich(span, {$creationLocationd_0dea112b090073317d4: C[4] || CT.C4}).build(context));
      let renderObject = richTextWidget.createRenderObject(context);
      renderObject.layout(constraints);
      let boxes = renderObject.getBoxesForSelection(new text_editing.TextSelection.new({baseOffset: 0, extentOffset: new text_span.TextSpan.new({text: this.widget.text}).toPlainText().length}));
      return boxes[$last].right;
    }
    build(context) {
      if (context == null) dart.nullFailed(I[0], 683, 29, "context");
      this[_initialize](context);
      let isHorizontal = this.widget.scrollAxis == basic_types.Axis.horizontal;
      let alignment = null;
      switch (this.widget.crossAxisAlignment) {
        case C[7] || CT.C7:
        {
          alignment = isHorizontal ? alignment$.Alignment.topCenter : alignment$.Alignment.centerLeft;
          break;
        }
        case C[8] || CT.C8:
        {
          alignment = isHorizontal ? alignment$.Alignment.bottomCenter : alignment$.Alignment.centerRight;
          break;
        }
        case C[1] || CT.C1:
        {
          alignment = alignment$.Alignment.center;
          break;
        }
        case C[9] || CT.C9:
        case C[10] || CT.C10:
        {
          alignment = null;
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      let marquee = new scroll_view.ListView.builder({controller: this[_controller], scrollDirection: this.widget.scrollAxis, physics: new scroll_physics.NeverScrollableScrollPhysics.new(), itemBuilder: dart.fn((_, i) => {
          if (_ == null) dart.nullFailed(I[0], 710, 21, "_");
          if (i == null) dart.nullFailed(I[0], 710, 24, "i");
          let text = i[$isEven] ? new text$.Text.new(this.widget.text, {style: this.widget.style, textScaleFactor: this.widget.textScaleFactor, $creationLocationd_0dea112b090073317d4: C[11] || CT.C11}) : this[_buildBlankSpace]();
          return alignment == null ? text : new basic.Align.new({alignment: alignment, child: text, $creationLocationd_0dea112b090073317d4: C[16] || CT.C16});
        }, T.BuildContextAndintToWidget()), $creationLocationd_0dea112b090073317d4: C[20] || CT.C20});
      return true ? marquee : this[_wrapWithFadingEdgeScrollView](marquee);
    }
    [_buildBlankSpace]() {
      return new basic.SizedBox.new({width: this.widget.scrollAxis == basic_types.Axis.horizontal ? this.widget.blankSpace : null, height: this.widget.scrollAxis == basic_types.Axis.vertical ? this.widget.blankSpace : null, $creationLocationd_0dea112b090073317d4: C[26] || CT.C26});
    }
    [_wrapWithFadingEdgeScrollView](child) {
      if (child == null) dart.nullFailed(I[0], 732, 47, "child");
      return fading_edge_scrollview.FadingEdgeScrollView.fromScrollView({gradientFractionOnStart: !dart.test(this.showFading) ? 0.0 : this.widget.fadingEdgeStartFraction, gradientFractionOnEnd: !dart.test(this.showFading) ? 0.0 : this.widget.fadingEdgeEndFraction, child: scroll_view.ScrollView.as(child), $creationLocationd_0dea112b090073317d4: C[30] || CT.C30});
    }
  };
  (marquee._MarqueeState.new = function() {
    this[_controller] = new scroll_controller.ScrollController.new();
    this[___MarqueeState__startPosition] = null;
    this[___MarqueeState__startPosition_isSet] = false;
    this[___MarqueeState__accelerationTarget] = null;
    this[___MarqueeState__accelerationTarget_isSet] = false;
    this[___MarqueeState__linearTarget] = null;
    this[___MarqueeState__linearTarget_isSet] = false;
    this[___MarqueeState__decelerationTarget] = null;
    this[___MarqueeState__decelerationTarget_isSet] = false;
    this[___MarqueeState__totalDuration] = null;
    this[___MarqueeState__totalDuration_isSet] = false;
    this[_linearDuration] = null;
    this[_running] = false;
    this[_isOnPause] = false;
    this[_roundCounter] = 0;
    marquee._MarqueeState.__proto__.new.call(this);
    ;
  }).prototype = marquee._MarqueeState.prototype;
  dart.addTypeTests(marquee._MarqueeState);
  dart.addTypeCaches(marquee._MarqueeState);
  dart.setMethodSignature(marquee._MarqueeState, () => ({
    __proto__: dart.getMethods(marquee._MarqueeState.__proto__),
    [_scroll]: dart.fnType(async.Future$(core.bool), []),
    [_initialize]: dart.fnType(dart.void, [framework.BuildContext]),
    [_makeRoundTrip]: dart.fnType(async.Future$(dart.void), []),
    [_accelerate]: dart.fnType(async.Future$(dart.void), []),
    [_moveLinearly]: dart.fnType(async.Future$(dart.void), []),
    [_decelerate]: dart.fnType(async.Future$(dart.void), []),
    [_animateTo]: dart.fnType(async.Future$(dart.void), [dart.nullable(core.double), dart.nullable(core.Duration), curves.Curve]),
    [_getTextWidth]: dart.fnType(core.double, [framework.BuildContext]),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_buildBlankSpace]: dart.fnType(framework.Widget, []),
    [_wrapWithFadingEdgeScrollView]: dart.fnType(framework.Widget, [framework.Widget])
  }));
  dart.setGetterSignature(marquee._MarqueeState, () => ({
    __proto__: dart.getGetters(marquee._MarqueeState.__proto__),
    [_startPosition]: core.double,
    [_accelerationTarget]: core.double,
    [_linearTarget]: core.double,
    [_decelerationTarget]: core.double,
    [_totalDuration]: core.Duration,
    [_accelerationDuration]: core.Duration,
    [_decelerationDuration]: core.Duration,
    isDone: core.bool,
    showFading: core.bool
  }));
  dart.setSetterSignature(marquee._MarqueeState, () => ({
    __proto__: dart.getSetters(marquee._MarqueeState.__proto__),
    [_startPosition]: core.double,
    [_accelerationTarget]: core.double,
    [_linearTarget]: core.double,
    [_decelerationTarget]: core.double,
    [_totalDuration]: core.Duration
  }));
  dart.setLibraryUri(marquee._MarqueeState, I[1]);
  dart.setFieldSignature(marquee._MarqueeState, () => ({
    __proto__: dart.getFields(marquee._MarqueeState.__proto__),
    [_controller]: dart.finalFieldType(scroll_controller.ScrollController),
    [___MarqueeState__startPosition]: dart.fieldType(dart.nullable(core.double)),
    [___MarqueeState__startPosition_isSet]: dart.fieldType(core.bool),
    [___MarqueeState__accelerationTarget]: dart.fieldType(dart.nullable(core.double)),
    [___MarqueeState__accelerationTarget_isSet]: dart.fieldType(core.bool),
    [___MarqueeState__linearTarget]: dart.fieldType(dart.nullable(core.double)),
    [___MarqueeState__linearTarget_isSet]: dart.fieldType(core.bool),
    [___MarqueeState__decelerationTarget]: dart.fieldType(dart.nullable(core.double)),
    [___MarqueeState__decelerationTarget_isSet]: dart.fieldType(core.bool),
    [___MarqueeState__totalDuration]: dart.fieldType(dart.nullable(core.Duration)),
    [___MarqueeState__totalDuration_isSet]: dart.fieldType(core.bool),
    [_linearDuration]: dart.fieldType(dart.nullable(core.Duration)),
    [_running]: dart.fieldType(core.bool),
    [_isOnPause]: dart.fieldType(core.bool),
    [_roundCounter]: dart.fieldType(core.int)
  }));
  dart.trackLibraries("packages/marquee/marquee.dart", {
    "package:marquee/marquee.dart": marquee
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["marquee.dart"],"names":[],"mappings":"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","file":"../../../../../../../../C:/packages/marquee/marquee.dart.lib.js"}');
  // Exports:
  return {
    marquee: marquee
  };
}));

//# sourceMappingURL=marquee.dart.lib.js.map
